commit 40f12d882fd75eff78ce07b0fb10f5ee907ca5b6
Author: Paul Coelho <paulrrco@gmail.com>
Date:   Sun Aug 27 12:16:02 2023 -0700

    Initial Commit

diff --git a/IntXFace.xcodeproj/project.pbxproj b/IntXFace.xcodeproj/project.pbxproj
new file mode 100644
index 0000000..6aaefc0
--- /dev/null
+++ b/IntXFace.xcodeproj/project.pbxproj
@@ -0,0 +1,341 @@
+// !$*UTF8*$!
+{
+	archiveVersion = 1;
+	classes = {
+	};
+	objectVersion = 56;
+	objects = {
+
+/* Begin PBXBuildFile section */
+		48F5D18B2A9A525D0069C320 /* IntXFaceApp.swift in Sources */ = {isa = PBXBuildFile; fileRef = 48F5D18A2A9A525D0069C320 /* IntXFaceApp.swift */; };
+		48F5D18D2A9A525D0069C320 /* ContentView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 48F5D18C2A9A525D0069C320 /* ContentView.swift */; };
+		48F5D18F2A9A525D0069C320 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 48F5D18E2A9A525D0069C320 /* Assets.xcassets */; };
+		48F5D1922A9A525D0069C320 /* Preview Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 48F5D1912A9A525D0069C320 /* Preview Assets.xcassets */; };
+/* End PBXBuildFile section */
+
+/* Begin PBXFileReference section */
+		48F5D1872A9A525D0069C320 /* IntXFace.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = IntXFace.app; sourceTree = BUILT_PRODUCTS_DIR; };
+		48F5D18A2A9A525D0069C320 /* IntXFaceApp.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IntXFaceApp.swift; sourceTree = "<group>"; };
+		48F5D18C2A9A525D0069C320 /* ContentView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContentView.swift; sourceTree = "<group>"; };
+		48F5D18E2A9A525D0069C320 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
+		48F5D1912A9A525D0069C320 /* Preview Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = "Preview Assets.xcassets"; sourceTree = "<group>"; };
+		48F5D1932A9A525D0069C320 /* IntXFace.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = IntXFace.entitlements; sourceTree = "<group>"; };
+/* End PBXFileReference section */
+
+/* Begin PBXFrameworksBuildPhase section */
+		48F5D1842A9A525C0069C320 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		48F5D17E2A9A525C0069C320 = {
+			isa = PBXGroup;
+			children = (
+				48F5D1892A9A525D0069C320 /* IntXFace */,
+				48F5D1882A9A525D0069C320 /* Products */,
+			);
+			sourceTree = "<group>";
+		};
+		48F5D1882A9A525D0069C320 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				48F5D1872A9A525D0069C320 /* IntXFace.app */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		48F5D1892A9A525D0069C320 /* IntXFace */ = {
+			isa = PBXGroup;
+			children = (
+				48F5D18A2A9A525D0069C320 /* IntXFaceApp.swift */,
+				48F5D18C2A9A525D0069C320 /* ContentView.swift */,
+				48F5D18E2A9A525D0069C320 /* Assets.xcassets */,
+				48F5D1932A9A525D0069C320 /* IntXFace.entitlements */,
+				48F5D1902A9A525D0069C320 /* Preview Content */,
+			);
+			path = IntXFace;
+			sourceTree = "<group>";
+		};
+		48F5D1902A9A525D0069C320 /* Preview Content */ = {
+			isa = PBXGroup;
+			children = (
+				48F5D1912A9A525D0069C320 /* Preview Assets.xcassets */,
+			);
+			path = "Preview Content";
+			sourceTree = "<group>";
+		};
+/* End PBXGroup section */
+
+/* Begin PBXNativeTarget section */
+		48F5D1862A9A525C0069C320 /* IntXFace */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 48F5D1962A9A525D0069C320 /* Build configuration list for PBXNativeTarget "IntXFace" */;
+			buildPhases = (
+				48F5D1832A9A525C0069C320 /* Sources */,
+				48F5D1842A9A525C0069C320 /* Frameworks */,
+				48F5D1852A9A525C0069C320 /* Resources */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+			);
+			name = IntXFace;
+			productName = IntXFace;
+			productReference = 48F5D1872A9A525D0069C320 /* IntXFace.app */;
+			productType = "com.apple.product-type.application";
+		};
+/* End PBXNativeTarget section */
+
+/* Begin PBXProject section */
+		48F5D17F2A9A525C0069C320 /* Project object */ = {
+			isa = PBXProject;
+			attributes = {
+				BuildIndependentTargetsInParallel = 1;
+				LastSwiftUpdateCheck = 1430;
+				LastUpgradeCheck = 1430;
+				TargetAttributes = {
+					48F5D1862A9A525C0069C320 = {
+						CreatedOnToolsVersion = 14.3.1;
+					};
+				};
+			};
+			buildConfigurationList = 48F5D1822A9A525C0069C320 /* Build configuration list for PBXProject "IntXFace" */;
+			compatibilityVersion = "Xcode 14.0";
+			developmentRegion = en;
+			hasScannedForEncodings = 0;
+			knownRegions = (
+				en,
+				Base,
+			);
+			mainGroup = 48F5D17E2A9A525C0069C320;
+			productRefGroup = 48F5D1882A9A525D0069C320 /* Products */;
+			projectDirPath = "";
+			projectRoot = "";
+			targets = (
+				48F5D1862A9A525C0069C320 /* IntXFace */,
+			);
+		};
+/* End PBXProject section */
+
+/* Begin PBXResourcesBuildPhase section */
+		48F5D1852A9A525C0069C320 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				48F5D1922A9A525D0069C320 /* Preview Assets.xcassets in Resources */,
+				48F5D18F2A9A525D0069C320 /* Assets.xcassets in Resources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXResourcesBuildPhase section */
+
+/* Begin PBXSourcesBuildPhase section */
+		48F5D1832A9A525C0069C320 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				48F5D18D2A9A525D0069C320 /* ContentView.swift in Sources */,
+				48F5D18B2A9A525D0069C320 /* IntXFaceApp.swift in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXSourcesBuildPhase section */
+
+/* Begin XCBuildConfiguration section */
+		48F5D1942A9A525D0069C320 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_ENABLE_OBJC_WEAK = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = dwarf;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PREPROCESSOR_DEFINITIONS = (
+					"DEBUG=1",
+					"$(inherited)",
+				);
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				MACOSX_DEPLOYMENT_TARGET = 13.3;
+				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
+				MTL_FAST_MATH = YES;
+				ONLY_ACTIVE_ARCH = YES;
+				SDKROOT = macosx;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+			};
+			name = Debug;
+		};
+		48F5D1952A9A525D0069C320 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_ENABLE_OBJC_WEAK = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				MACOSX_DEPLOYMENT_TARGET = 13.3;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				MTL_FAST_MATH = YES;
+				SDKROOT = macosx;
+				SWIFT_COMPILATION_MODE = wholemodule;
+				SWIFT_OPTIMIZATION_LEVEL = "-O";
+			};
+			name = Release;
+		};
+		48F5D1972A9A525D0069C320 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
+				CODE_SIGN_ENTITLEMENTS = IntXFace/IntXFace.entitlements;
+				CODE_SIGN_STYLE = Automatic;
+				COMBINE_HIDPI_IMAGES = YES;
+				CURRENT_PROJECT_VERSION = 1;
+				DEVELOPMENT_ASSET_PATHS = "\"IntXFace/Preview Content\"";
+				DEVELOPMENT_TEAM = P7KMNQ8JV3;
+				ENABLE_HARDENED_RUNTIME = YES;
+				ENABLE_PREVIEWS = YES;
+				GENERATE_INFOPLIST_FILE = YES;
+				INFOPLIST_KEY_NSHumanReadableCopyright = "";
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/../Frameworks",
+				);
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.focal.IntXFace;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_EMIT_LOC_STRINGS = YES;
+				SWIFT_VERSION = 5.0;
+			};
+			name = Debug;
+		};
+		48F5D1982A9A525D0069C320 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
+				CODE_SIGN_ENTITLEMENTS = IntXFace/IntXFace.entitlements;
+				CODE_SIGN_STYLE = Automatic;
+				COMBINE_HIDPI_IMAGES = YES;
+				CURRENT_PROJECT_VERSION = 1;
+				DEVELOPMENT_ASSET_PATHS = "\"IntXFace/Preview Content\"";
+				DEVELOPMENT_TEAM = P7KMNQ8JV3;
+				ENABLE_HARDENED_RUNTIME = YES;
+				ENABLE_PREVIEWS = YES;
+				GENERATE_INFOPLIST_FILE = YES;
+				INFOPLIST_KEY_NSHumanReadableCopyright = "";
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/../Frameworks",
+				);
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.focal.IntXFace;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_EMIT_LOC_STRINGS = YES;
+				SWIFT_VERSION = 5.0;
+			};
+			name = Release;
+		};
+/* End XCBuildConfiguration section */
+
+/* Begin XCConfigurationList section */
+		48F5D1822A9A525C0069C320 /* Build configuration list for PBXProject "IntXFace" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				48F5D1942A9A525D0069C320 /* Debug */,
+				48F5D1952A9A525D0069C320 /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		48F5D1962A9A525D0069C320 /* Build configuration list for PBXNativeTarget "IntXFace" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				48F5D1972A9A525D0069C320 /* Debug */,
+				48F5D1982A9A525D0069C320 /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+/* End XCConfigurationList section */
+	};
+	rootObject = 48F5D17F2A9A525C0069C320 /* Project object */;
+}
diff --git a/IntXFace.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/IntXFace.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
index 0000000..919434a
--- /dev/null
+++ b/IntXFace.xcodeproj/project.xcworkspace/contents.xcworkspacedata
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "self:">
+   </FileRef>
+</Workspace>
diff --git a/IntXFace.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/IntXFace.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
index 0000000..18d9810
--- /dev/null
+++ b/IntXFace.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/IntXFace.xcodeproj/xcuserdata/pcoelho.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist b/IntXFace.xcodeproj/xcuserdata/pcoelho.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist
new file mode 100644
index 0000000..e39cafa
--- /dev/null
+++ b/IntXFace.xcodeproj/xcuserdata/pcoelho.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Bucket
+   uuid = "75D61C41-916D-414D-A436-527C57E6FF9C"
+   type = "1"
+   version = "2.0">
+</Bucket>
diff --git a/IntXFace.xcodeproj/xcuserdata/pcoelho.xcuserdatad/xcschemes/xcschememanagement.plist b/IntXFace.xcodeproj/xcuserdata/pcoelho.xcuserdatad/xcschemes/xcschememanagement.plist
new file mode 100644
index 0000000..cd9f536
--- /dev/null
+++ b/IntXFace.xcodeproj/xcuserdata/pcoelho.xcuserdatad/xcschemes/xcschememanagement.plist
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>SchemeUserState</key>
+	<dict>
+		<key>IntXFace.xcscheme_^#shared#^_</key>
+		<dict>
+			<key>orderHint</key>
+			<integer>0</integer>
+		</dict>
+	</dict>
+</dict>
+</plist>
diff --git a/IntXFace/Assets.xcassets/AccentColor.colorset/Contents.json b/IntXFace/Assets.xcassets/AccentColor.colorset/Contents.json
new file mode 100644
index 0000000..eb87897
--- /dev/null
+++ b/IntXFace/Assets.xcassets/AccentColor.colorset/Contents.json
@@ -0,0 +1,11 @@
+{
+  "colors" : [
+    {
+      "idiom" : "universal"
+    }
+  ],
+  "info" : {
+    "author" : "xcode",
+    "version" : 1
+  }
+}
diff --git a/IntXFace/Assets.xcassets/AppIcon.appiconset/Contents.json b/IntXFace/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
index 0000000..3f00db4
--- /dev/null
+++ b/IntXFace/Assets.xcassets/AppIcon.appiconset/Contents.json
@@ -0,0 +1,58 @@
+{
+  "images" : [
+    {
+      "idiom" : "mac",
+      "scale" : "1x",
+      "size" : "16x16"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "2x",
+      "size" : "16x16"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "1x",
+      "size" : "32x32"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "2x",
+      "size" : "32x32"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "1x",
+      "size" : "128x128"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "2x",
+      "size" : "128x128"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "1x",
+      "size" : "256x256"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "2x",
+      "size" : "256x256"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "1x",
+      "size" : "512x512"
+    },
+    {
+      "idiom" : "mac",
+      "scale" : "2x",
+      "size" : "512x512"
+    }
+  ],
+  "info" : {
+    "author" : "xcode",
+    "version" : 1
+  }
+}
diff --git a/IntXFace/Assets.xcassets/Contents.json b/IntXFace/Assets.xcassets/Contents.json
new file mode 100644
index 0000000..73c0059
--- /dev/null
+++ b/IntXFace/Assets.xcassets/Contents.json
@@ -0,0 +1,6 @@
+{
+  "info" : {
+    "author" : "xcode",
+    "version" : 1
+  }
+}
diff --git a/IntXFace/ContentView.swift b/IntXFace/ContentView.swift
new file mode 100644
index 0000000..64f9b59
--- /dev/null
+++ b/IntXFace/ContentView.swift
@@ -0,0 +1,97 @@
+//
+//  ContentView.swift
+//  IntXFace
+//
+//  Created by Paul Coelho on 8/26/23.
+//
+
+import SwiftUI
+
+class Keyboard: ObservableObject {
+    @Published var string: String = "hello"
+    var count = 0
+    init() {
+        NSEvent.addLocalMonitorForEvents(matching:NSEvent.EventTypeMask.keyDown, handler: {(event: NSEvent) in
+            if (self.count == 0) {
+                self.string = "ok"
+                self.count = 1
+            } else {
+                self.string = "again"
+            }
+            print("keyPressed \(event.characters!)")
+            return event})
+    }
+}
+
+class Queue: ObservableObject {
+    @Published var float: CGFloat = 0
+    var floats: [CGFloat] = []
+    init(_ float: CGFloat) {
+        self.float = float
+        NSEvent.addLocalMonitorForEvents(matching:NSEvent.EventTypeMask.applicationDefined, handler: {(event: NSEvent) in
+            if (self.floats.isEmpty) {return event}
+            self.float = self.floats.first!
+            self.floats.removeFirst()
+            return event})
+    }
+    func push(_ float: CGFloat) {
+        NSApp.postEvent(
+            NSEvent.otherEvent(
+                with:.applicationDefined,
+                location:NSZeroPoint,
+                modifierFlags:.command,
+                timestamp:0.0,
+                windowNumber:0,
+                context:nil,
+                subtype:0,
+                data1:Int(0),
+                data2:Int(0))!,
+            atStart:false)
+        floats.append(float)
+    }
+}
+
+struct TextView: NSViewRepresentable {
+    @ObservedObject var keyboard: Keyboard
+    func makeNSView(context: Context) -> NSView {
+        let file = NSTextView.scrollableTextView()
+        guard let text = file.documentView as? NSTextView else {return NSView()}
+        let font = NSFont.userFont(ofSize:36.0)
+        text.font = font
+        text.string = keyboard.string
+        text.backgroundColor = NSColor.white
+        text.textColor = NSColor.black
+        text.isEditable = false
+        text.isVerticallyResizable = false
+        text.isHorizontallyResizable = false
+        return text
+    }
+    func updateNSView(_ view: NSView, context: Context) {
+        guard let text = view as? NSTextView else {return}
+        text.string = keyboard.string
+    }
+}
+
+struct ContentView: View {
+    @StateObject var keyboard = Keyboard()
+    @ObservedObject var queue = Queue(0.5)
+    let thickness : CGFloat = 10
+    func ratioHeight(_ height: CGFloat, _ delta: CGFloat) -> CGFloat {
+        var value = queue.float*height-delta
+        if (value < 0) {value = 0}
+        if (value > height-thickness) {value = height-thickness}
+        return value/height
+    }
+    var body: some View {
+        GeometryReader { geo in
+            VStack(spacing: 0) {
+                TextView(keyboard: keyboard)/*Color.blue*/
+                    .frame(height:geo.size.height-geo.size.height*queue.float-thickness)
+                Color.orange.frame(height: thickness).gesture(DragGesture(coordinateSpace:.local).onChanged { gesture in
+                    queue.push(ratioHeight(geo.size.height,gesture.translation.height))})
+                TextView(keyboard: keyboard)/*Color.blue*/
+                    .frame(height:geo.size.height*queue.float)
+            }
+        }
+    }
+}
diff --git a/IntXFace/IntXFace.entitlements b/IntXFace/IntXFace.entitlements
new file mode 100644
index 0000000..f2ef3ae
--- /dev/null
+++ b/IntXFace/IntXFace.entitlements
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+    <key>com.apple.security.app-sandbox</key>
+    <true/>
+    <key>com.apple.security.files.user-selected.read-only</key>
+    <true/>
+</dict>
+</plist>
diff --git a/IntXFace/IntXFaceApp.swift b/IntXFace/IntXFaceApp.swift
new file mode 100644
index 0000000..d4f67ca
--- /dev/null
+++ b/IntXFace/IntXFaceApp.swift
@@ -0,0 +1,17 @@
+//
+//  IntXFaceApp.swift
+//  IntXFace
+//
+//  Created by Paul Coelho on 8/26/23.
+//
+
+import SwiftUI
+
+@main
+struct IntXFaceApp: App {
+    var body: some Scene {
+        WindowGroup {            
+            ContentView()
+        }
+    }
+}
diff --git a/IntXFace/Preview Content/Preview Assets.xcassets/Contents.json b/IntXFace/Preview Content/Preview Assets.xcassets/Contents.json
new file mode 100644
index 0000000..73c0059
--- /dev/null
+++ b/IntXFace/Preview Content/Preview Assets.xcassets/Contents.json	
@@ -0,0 +1,6 @@
+{
+  "info" : {
+    "author" : "xcode",
+    "version" : 1
+  }
+}
